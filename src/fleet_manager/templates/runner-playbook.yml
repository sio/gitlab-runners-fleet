---
# Ansible playbook to initialize GitLab runner on localhost

- hosts: localhost
  collections:
    - potyarkin.homelab
  become: yes
  roles:
    - role: server
      server_remote_user: op
      server_keys_public:
        - /etc/provision/public_key

    - role: packages
      packages_install:
        - docker.io

    - role: gitlab_runner
      gitlab_runner_token: '{{ lookup("file", "/etc/provision/gitlab_runner_token") }}'
      gitlab_runner_tags:
        - private-runner
      gitlab_runner_executor: docker
      gitlab_runner_concurrent_jobs: 3
      gitlab_runner_extra_registration_params:
        name: 'private-runner-{{ ansible_hostname }}'
        run-untagged: ''
        locked: 'false'
        docker-privileged: 'true'
        docker-image: 'ruby:2.5'
        docker-volumes: '/certs/client'

  tasks:
    - name: grant gitlab-runner access to docker socket
      user:
        name: gitlab-runner
        groups: docker
        append: yes
      notify: restart gitlab runner

    - name: enable metrics endpoint for gitlab-runner
      lineinfile:
        path: /etc/gitlab-runner-custom/config.toml
        line: listen_address = "localhost:9252"
        regexp: '^listen_address'
        insertbefore: BOF
      notify: restart gitlab runner

    - name: install control scripts
      copy:
        src: '{{ item }}'
        dest: '/usr/local/bin/{{ item.split(".")[0] }}'
        mode: '0755'
      loop:
        - control.py
        - unregister-wait.sh

    - name: install systemd units
      copy:
        src: '{{ item }}'
        dest: '/etc/systemd/system/{{ item }}'
        mode: '0644'
      loop:
        - control.service
        - unregister.service
        - unregister.socket

    - name: start systemd units
      systemd:
        name: '{{ item }}'
        state: started
        enabled: yes
        daemon_reload: yes
      loop:
        - control.service
        - unregister.socket

    - name: open control port on WAN
      ufw:
        rule: allow
        port: '8080'
        proto: tcp


  # TODO: Docker cleanup (see https://docs.gitlab.com/runner/executors/docker.html#the-builds-and-cache-storage )
